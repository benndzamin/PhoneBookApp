// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhoneBookApp.Data;

#nullable disable

namespace PhoneBookApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PhoneBookApp.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Sarajevo"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Mostar"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            Name = "Tuzla"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            Name = "Zenica"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 2,
                            Name = "Zagreb"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 2,
                            Name = "Split"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 2,
                            Name = "Dubrovnik"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 2,
                            Name = "Rijeka"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 3,
                            Name = "Novi Sad"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 3,
                            Name = "Beograd"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 3,
                            Name = "Niš"
                        });
                });

            modelBuilder.Entity("PhoneBookApp.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1985, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CityId = 1,
                            CountryId = 1,
                            Email = "johndoe@example.com",
                            FirstName = "John",
                            Gender = 1,
                            LastName = "Doe",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1990, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CityId = 5,
                            CountryId = 2,
                            Email = "janedoe@example.com",
                            FirstName = "Jane",
                            Gender = 0,
                            LastName = "Doe",
                            PhoneNumber = "987654321"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1980, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CityId = 10,
                            CountryId = 3,
                            Email = "marksmith@example.com",
                            FirstName = "Mark",
                            Gender = 1,
                            LastName = "Smith",
                            PhoneNumber = "555555555"
                        });
                });

            modelBuilder.Entity("PhoneBookApp.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bosna i Hercegovina"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hrvatska"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Srbija"
                        });
                });

            modelBuilder.Entity("PhoneBookApp.Models.City", b =>
                {
                    b.HasOne("PhoneBookApp.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Country");
                });

            modelBuilder.Entity("PhoneBookApp.Models.Contact", b =>
                {
                    b.HasOne("PhoneBookApp.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PhoneBookApp.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("PhoneBookApp.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
